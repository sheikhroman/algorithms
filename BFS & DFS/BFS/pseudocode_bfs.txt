 Pseudicode of BFS
=== === === === ===

Input -> connected graph and a source
Output-> Traverse all nodes and print the traversal order

BFS(graph, source):

- Initiate an array called "visited" and an empty wueue "q"
- mark visited[source] = 1 and q.push(source)
- while the queue is not empty:
    - head = q.front()
    - q.pop()

    - print the node "head"
    - for all adjacent nodes of "hade":
        - if visited[adj_node] == 0:
            - visited[adj_node] = 1 and q.push(adj_node)